"""change_user_sessions

Revision ID: 0003
Revises: 0002
Create Date: 2025-10-26 21:46:24.105317

"""

from collections.abc import Sequence

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql
# revision identifiers, used by Alembic.
revision: str = '0003'
down_revision: str | None = '0002'
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('user_sessions', 'expired',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False)
    op.drop_index(op.f('ix_user_sessions_session_key'), table_name='user_sessions')
    op.drop_column('user_sessions', 'token_type')
    op.drop_column('user_sessions', 'session_key')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('user_sessions', sa.Column('session_key', sa.UUID(), autoincrement=False, nullable=False))
    op.add_column('user_sessions', sa.Column('token_type', sa.VARCHAR(length=50), autoincrement=False, nullable=False))
    op.create_index(op.f('ix_user_sessions_session_key'), 'user_sessions', ['session_key'], unique=False)
    op.alter_column('user_sessions', 'expired',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True)
    # ### end Alembic commands ###
